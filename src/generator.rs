use std::fs;

use crate::interpreter::Globals;

const MCMETA: &str = r#"
{
    "pack": {
        "pack_format": 3,
        "description": "Datapack generated by the Emerald Programming Language"
    }
}
"#;


const BASE_DIR: &str = r#"/Users/Flow/AppData/Roaming/.minecraft/saves/emerald/datapacks/"#;

pub fn generate_datapack(globals: &Globals) {

    fs::remove_dir_all(BASE_DIR.to_string() + "emeraldgen");
    fs::create_dir_all(BASE_DIR.to_string() + "emeraldgen/data/mrld/functions").unwrap();
    fs::write(BASE_DIR.to_string() + "emeraldgen/pack.mcmeta", MCMETA).unwrap();

    for (i, v) in &globals.mcfuncs.map {
        fs::write(BASE_DIR.to_string() + &format!("emeraldgen/data/mrld/functions/gen{}.mcfunction", i), v.join("\n")).unwrap();
    }

}

